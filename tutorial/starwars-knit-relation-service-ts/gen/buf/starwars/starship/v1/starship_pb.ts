// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file buf/starwars/starship/v1/starship.proto (package buf.starwars.starship.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, protoInt64 } from "@bufbuild/protobuf";

/**
 * @generated from message buf.starwars.starship.v1.Starship
 */
export class Starship extends Message<Starship> {
  /**
   * @generated from field: string starship_id = 1;
   */
  starshipId = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string model = 3;
   */
  model = "";

  /**
   * @generated from field: string manufacturer = 4;
   */
  manufacturer = "";

  /**
   * @generated from field: uint64 cost_in_credits = 5;
   */
  costInCredits = protoInt64.zero;

  /**
   * @generated from field: uint64 length = 6;
   */
  length = protoInt64.zero;

  /**
   * @generated from field: uint64 max_atmosphering_speed = 7;
   */
  maxAtmospheringSpeed = protoInt64.zero;

  /**
   * @generated from field: uint64 crew = 8;
   */
  crew = protoInt64.zero;

  /**
   * @generated from field: uint64 passengers = 9;
   */
  passengers = protoInt64.zero;

  /**
   * @generated from field: uint64 cargo_capacity = 10;
   */
  cargoCapacity = protoInt64.zero;

  /**
   * @generated from field: string consumables = 11;
   */
  consumables = "";

  /**
   * @generated from field: float hyperdrive_rating = 12;
   */
  hyperdriveRating = 0;

  /**
   * @generated from field: uint64 mglt = 13;
   */
  mglt = protoInt64.zero;

  /**
   * @generated from field: string starship_class = 14;
   */
  starshipClass = "";

  /**
   * Relations
   *
   * @generated from field: repeated string pilot_ids = 15;
   */
  pilotIds: string[] = [];

  /**
   * @generated from field: repeated string film_ids = 16;
   */
  filmIds: string[] = [];

  constructor(data?: PartialMessage<Starship>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.starwars.starship.v1.Starship";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "starship_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "model", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "manufacturer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "cost_in_credits", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "length", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "max_atmosphering_speed", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 8, name: "crew", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 9, name: "passengers", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 10, name: "cargo_capacity", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 11, name: "consumables", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "hyperdrive_rating", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 13, name: "mglt", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 14, name: "starship_class", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 15, name: "pilot_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 16, name: "film_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Starship {
    return new Starship().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Starship {
    return new Starship().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Starship {
    return new Starship().fromJsonString(jsonString, options);
  }

  static equals(a: Starship | PlainMessage<Starship> | undefined, b: Starship | PlainMessage<Starship> | undefined): boolean {
    return proto3.util.equals(Starship, a, b);
  }
}

/**
 * @generated from message buf.starwars.starship.v1.StarshipsRequest
 */
export class StarshipsRequest extends Message<StarshipsRequest> {
  /**
   * @generated from field: repeated string starship_ids = 1;
   */
  starshipIds: string[] = [];

  /**
   * @generated from field: uint32 limit = 2;
   */
  limit = 0;

  constructor(data?: PartialMessage<StarshipsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.starwars.starship.v1.StarshipsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "starship_ids", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 2, name: "limit", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StarshipsRequest {
    return new StarshipsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StarshipsRequest {
    return new StarshipsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StarshipsRequest {
    return new StarshipsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: StarshipsRequest | PlainMessage<StarshipsRequest> | undefined, b: StarshipsRequest | PlainMessage<StarshipsRequest> | undefined): boolean {
    return proto3.util.equals(StarshipsRequest, a, b);
  }
}

/**
 * @generated from message buf.starwars.starship.v1.StarshipsResponse
 */
export class StarshipsResponse extends Message<StarshipsResponse> {
  /**
   * @generated from field: repeated buf.starwars.starship.v1.Starship starships = 1;
   */
  starships: Starship[] = [];

  constructor(data?: PartialMessage<StarshipsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.starwars.starship.v1.StarshipsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "starships", kind: "message", T: Starship, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StarshipsResponse {
    return new StarshipsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StarshipsResponse {
    return new StarshipsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StarshipsResponse {
    return new StarshipsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: StarshipsResponse | PlainMessage<StarshipsResponse> | undefined, b: StarshipsResponse | PlainMessage<StarshipsResponse> | undefined): boolean {
    return proto3.util.equals(StarshipsResponse, a, b);
  }
}

