// @generated by protoc-gen-es v1.2.0 with parameter "target=ts"
// @generated from file buf/starwars/relation/v1/relation.proto (package buf.starwars.relation.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Film } from "../../film/v1/film_pb.js";
import { Starship } from "../../starship/v1/starship_pb.js";
import { Quote } from "../../quote/v1/quote_pb.js";

/**
 * @generated from message buf.starwars.relation.v1.GetFilmStarshipsRequest
 */
export class GetFilmStarshipsRequest extends Message<GetFilmStarshipsRequest> {
  /**
   * @generated from field: repeated buf.starwars.film.v1.Film bases = 1;
   */
  bases: Film[] = [];

  constructor(data?: PartialMessage<GetFilmStarshipsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.starwars.relation.v1.GetFilmStarshipsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bases", kind: "message", T: Film, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFilmStarshipsRequest {
    return new GetFilmStarshipsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFilmStarshipsRequest {
    return new GetFilmStarshipsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFilmStarshipsRequest {
    return new GetFilmStarshipsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetFilmStarshipsRequest | PlainMessage<GetFilmStarshipsRequest> | undefined, b: GetFilmStarshipsRequest | PlainMessage<GetFilmStarshipsRequest> | undefined): boolean {
    return proto3.util.equals(GetFilmStarshipsRequest, a, b);
  }
}

/**
 * @generated from message buf.starwars.relation.v1.GetFilmStarshipsResponse
 */
export class GetFilmStarshipsResponse extends Message<GetFilmStarshipsResponse> {
  /**
   * @generated from field: repeated buf.starwars.relation.v1.GetFilmStarshipsResponse.Value values = 1;
   */
  values: GetFilmStarshipsResponse_Value[] = [];

  constructor(data?: PartialMessage<GetFilmStarshipsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.starwars.relation.v1.GetFilmStarshipsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "values", kind: "message", T: GetFilmStarshipsResponse_Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFilmStarshipsResponse {
    return new GetFilmStarshipsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFilmStarshipsResponse {
    return new GetFilmStarshipsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFilmStarshipsResponse {
    return new GetFilmStarshipsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetFilmStarshipsResponse | PlainMessage<GetFilmStarshipsResponse> | undefined, b: GetFilmStarshipsResponse | PlainMessage<GetFilmStarshipsResponse> | undefined): boolean {
    return proto3.util.equals(GetFilmStarshipsResponse, a, b);
  }
}

/**
 * @generated from message buf.starwars.relation.v1.GetFilmStarshipsResponse.Value
 */
export class GetFilmStarshipsResponse_Value extends Message<GetFilmStarshipsResponse_Value> {
  /**
   * @generated from field: repeated buf.starwars.starship.v1.Starship starships = 1;
   */
  starships: Starship[] = [];

  constructor(data?: PartialMessage<GetFilmStarshipsResponse_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.starwars.relation.v1.GetFilmStarshipsResponse.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "starships", kind: "message", T: Starship, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetFilmStarshipsResponse_Value {
    return new GetFilmStarshipsResponse_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetFilmStarshipsResponse_Value {
    return new GetFilmStarshipsResponse_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetFilmStarshipsResponse_Value {
    return new GetFilmStarshipsResponse_Value().fromJsonString(jsonString, options);
  }

  static equals(a: GetFilmStarshipsResponse_Value | PlainMessage<GetFilmStarshipsResponse_Value> | undefined, b: GetFilmStarshipsResponse_Value | PlainMessage<GetFilmStarshipsResponse_Value> | undefined): boolean {
    return proto3.util.equals(GetFilmStarshipsResponse_Value, a, b);
  }
}

/**
 * @generated from message buf.starwars.relation.v1.GetQuoteFilmRequest
 */
export class GetQuoteFilmRequest extends Message<GetQuoteFilmRequest> {
  /**
   * @generated from field: repeated buf.starwars.quote.v1.Quote bases = 1;
   */
  bases: Quote[] = [];

  constructor(data?: PartialMessage<GetQuoteFilmRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.starwars.relation.v1.GetQuoteFilmRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "bases", kind: "message", T: Quote, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetQuoteFilmRequest {
    return new GetQuoteFilmRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetQuoteFilmRequest {
    return new GetQuoteFilmRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetQuoteFilmRequest {
    return new GetQuoteFilmRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetQuoteFilmRequest | PlainMessage<GetQuoteFilmRequest> | undefined, b: GetQuoteFilmRequest | PlainMessage<GetQuoteFilmRequest> | undefined): boolean {
    return proto3.util.equals(GetQuoteFilmRequest, a, b);
  }
}

/**
 * @generated from message buf.starwars.relation.v1.GetQuoteFilmResponse
 */
export class GetQuoteFilmResponse extends Message<GetQuoteFilmResponse> {
  /**
   * @generated from field: repeated buf.starwars.relation.v1.GetQuoteFilmResponse.Value values = 1;
   */
  values: GetQuoteFilmResponse_Value[] = [];

  constructor(data?: PartialMessage<GetQuoteFilmResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.starwars.relation.v1.GetQuoteFilmResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "values", kind: "message", T: GetQuoteFilmResponse_Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetQuoteFilmResponse {
    return new GetQuoteFilmResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetQuoteFilmResponse {
    return new GetQuoteFilmResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetQuoteFilmResponse {
    return new GetQuoteFilmResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetQuoteFilmResponse | PlainMessage<GetQuoteFilmResponse> | undefined, b: GetQuoteFilmResponse | PlainMessage<GetQuoteFilmResponse> | undefined): boolean {
    return proto3.util.equals(GetQuoteFilmResponse, a, b);
  }
}

/**
 * @generated from message buf.starwars.relation.v1.GetQuoteFilmResponse.Value
 */
export class GetQuoteFilmResponse_Value extends Message<GetQuoteFilmResponse_Value> {
  /**
   * @generated from field: buf.starwars.film.v1.Film film = 1;
   */
  film?: Film;

  constructor(data?: PartialMessage<GetQuoteFilmResponse_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.starwars.relation.v1.GetQuoteFilmResponse.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "film", kind: "message", T: Film },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetQuoteFilmResponse_Value {
    return new GetQuoteFilmResponse_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetQuoteFilmResponse_Value {
    return new GetQuoteFilmResponse_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetQuoteFilmResponse_Value {
    return new GetQuoteFilmResponse_Value().fromJsonString(jsonString, options);
  }

  static equals(a: GetQuoteFilmResponse_Value | PlainMessage<GetQuoteFilmResponse_Value> | undefined, b: GetQuoteFilmResponse_Value | PlainMessage<GetQuoteFilmResponse_Value> | undefined): boolean {
    return proto3.util.equals(GetQuoteFilmResponse_Value, a, b);
  }
}

